version: 2.1

commands:
  authenticate_docker_hub:
    description: "Authenticate with Docker Hub"
    steps:
      - run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  pull_tag_push:
    description: "Pull, Tag and Push image"
    parameters:
      image:
        type: string
      tag:
        type: string
    steps:
      - run: docker pull << parameters.image >>:$CIRCLE_SHA1
      - run: docker tag << parameters.image >>:$CIRCLE_SHA1 << parameters.image >>:<< parameters.tag >>
      - run: docker push << parameters.image >>:<< parameters.tag >>
  pull_tag:
    description: "Pull and Tag image"
    parameters:
      image:
        type: string
      tag:
        type: string
    steps:
      - run: docker pull << parameters.image >>:$CIRCLE_SHA1
      - run: docker tag << parameters.image >>:$CIRCLE_SHA1 << parameters.image >>:<< parameters.tag >>
  demo_deploy:
    description: "Placeholder for real deploy logic"
    steps:
      - run: echo "Hello world, this should be deployed!"

executors:
  node-test:
    docker:
      - image: circleci/node:lts
  docker-build:
    machine:
      image: circleci/classic:201808-01

jobs:
  build-base:
    executor: docker-build
    steps:
     - checkout
     - authenticate_docker_hub
     - run:
        name: Building image
        command: docker build . -t newedensocial/base:$CIRCLE_SHA1
     - run:
        name: Push Image
        command: docker push newedensocial/base:$CIRCLE_SHA1

  build-api:
    executor: docker-build
    steps:
     - checkout
     - authenticate_docker_hub
     - pull_tag:
        image: newedensocial/base
        tag: latest
     - run:
        name: Building image
        working_directory: src/api
        command: docker build . -t newedensocial/api:$CIRCLE_SHA1
     - run:
        name: Push Image
        command: docker push newedensocial/api:$CIRCLE_SHA1

  build-web:
    executor: docker-build
    steps:
     - checkout
     - authenticate_docker_hub
     - pull_tag:
        image: newedensocial/base
        tag: latest
     - run:
        name: Building image
        working_directory: src/web
        command: docker build . -t newedensocial/web:$CIRCLE_SHA1
     - run:
        name: Push Image
        command: docker push newedensocial/web:$CIRCLE_SHA1


  test-lint:
    executor: node-test
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-node-modules-{{ .Branch }}-
            - v1-node-modules-master-
      - run:
          name: Install Lerna
          command: yarn global add lerna
      - run:
          name: Install Dependencies
          command: yarn run bootstrap
      - save_cache:
          key: v1-node-modules-{{ .Branch }}-{{ epoch }}
          paths:
            - /app/node_modules
      - run:
          name: Run Linter
          command: yarn lint

  test:
    executor: node-test
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-node-modules-{{ .Branch }}-
            - v1-node-modules-master-
      - run:
          name: Install Lerna
          command: yarn global add lerna
      - run:
          name: Install Dependencies
          command: yarn run bootstrap
      - save_cache:
          key: v1-node-modules-{{ .Branch }}-{{ epoch }}
          paths:
            - /app/api/node_modules
      - run:
          name: Run Tests
          command: yarn test

  push_latest:
    executor: docker-build
    steps:
      - authenticate_docker_hub
      - pull_tag_push:
          image: newedensocial/base
          tag: latest
      - pull_tag_push:
          image: newedensocial/api
          tag: latest
      - pull_tag_push:
          image: newedensocial/web
          tag: latest

  push_release:
    executor: docker-build
    steps:
      - authenticate_docker_hub
      - pull_tag_push:
          image: newedensocial/base
          tag: $CIRCLE_TAG
      - pull_tag_push:
          image: newedensocial/api
          tag: $CIRCLE_TAG
      - pull_tag_push:
          image: newedensocial/web
          tag: $CIRCLE_TAG

  deploy_latest:
    executor: docker-build
    steps:
      - demo_deploy

  deploy_release:
    executor: docker-build
    steps:
      - demo_deploy

workflows:
  version: 2
  feature-branch-workflow:
    jobs:
      - test-lint
      - test
      - build-base
      - build-api:
          requires:
            - build-base
      - build-web:
          requires:
            - build-base
      # Release latest version
      - push_latest:
          requires:
            - test-lint
            - test
            - build-base
            - build-api
            - build-web
          filters:
            branches:
              only: master
      - deploy_latest:
          requires:
            - push_latest
          filters:
            branches:
              only: master
      # Release new version
      - push_release:
          requires:
            - test-lint
            - test
            - build-base
            - build-api
            - build-web
          filters:
            branches:
              ignore:
                - /.*/
            tags:
              only: /^v.*/
      - deploy_release:
          requires:
            - push_release
          filters:
            branches:
              ignore:
                - /.*/
            tags:
              only: /^v.*/
