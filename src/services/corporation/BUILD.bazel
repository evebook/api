package(default_visibility = ["//visibility:public"])

load("@npm_bazel_typescript//:index.bzl", "ts_library")

ts_library(
    name = "lib",
    srcs = glob(["**/*.ts"]),
    module_name = "@new-eden-social/services-corporation",
    deps = [
        "@npm//@nestjs/common",
        "@npm//@nestjs/core",
        "@npm//@nestjs/microservices",
        "@npm//@nestjs/typeorm",
        "@npm//@new-eden-social/esi",
        "@npm//@new-eden-social/logger",
        "@npm//@new-eden-social/utils",
        "@npm//@new-eden-social/zkillboard",
        "@npm//@types/node",
        "@npm//reflect-metadata",
        "@npm//rxjs",
        "@npm//typeorm",
    ],
)

load("@build_bazel_rules_nodejs//:defs.bzl", "nodejs_binary")

nodejs_binary(
    name = "bin",
    bootstrap = ["source-map-support/register"],
    data = [
        ":lib",
        "@npm//@nestjs/platform-express",
        "@npm//pg",
        "@npm//source-map-support",
    ],
    entry_point = ":server.ts",
)

load("@io_bazel_rules_docker//nodejs:image.bzl", "nodejs_image")

nodejs_image(
    name = "docker",
    data = [":lib"],
    entry_point = ":server.ts",
    # This will be put into its own layer.
    node_modules = "@npm//:node_modules",
)
